openapi: 3.0.3
info:
  title: Ecomap REST API
  description: |-
    This is REST API on a rubbish recycling which provides the 
    ability to track
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: http://127.0.0.1:8080/api
tags:
  - name: user
    description: Operations about user
  - name: recycle point
    description: Info about recycle points
  - name: review
    description: Reviews about recycle points
  - name: rubbish type
    description: Info about rubbish types
  - name: take off
    description: Info about user rubbish take offs
paths:
  /user:
    get:
      security:
        - ApiKeyAuthUser: []
      parameters:
        - in: query
          name: email
          required: true
          schema:
            type: string
          description: User email you're looking for
      responses:
        '200':
          description: Found user output
          content:
            application/json:
              schema:
                $ref: '#components/schemas/OutputUser'
        default:
          description: According to response body error
      tags:
        - user
      summary: Search for user by email

    delete:
      security:
        - ApiKeyAuthAdmin: [ ]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: User id to delete
      responses:
        '200':
          description: Deletion success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: boolean
                    example: true
        default:
          description: According to response body error
      tags:
        - user
      summary: Delete certain user
  /user/blacklist:
    get:
      security:
        - ApiKeyAuthAdmin: [ ]
      responses:
        '200':
          description: List of blacklisted emails
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: string
                    example: jacksparrow@gmail.com
        default:
          description: According to response body error
      tags:
        - user
      summary: Returns all blacklisted user
    post:
      security:
        - ApiKeyAuthAdmin: [ ]
      parameters:
        - in: query
          name: email
          required: true
          schema:
            type: string
          description: User email to blacklist
      responses:
        '200':
          description: User blacklisting success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: boolean
                    example: true
        default:
          description: According to response body error
      tags:
        - user
      summary: Blacklists certain user email (user must be deleted in advance)
    delete:
      security:
        - ApiKeyAuthAdmin: [ ]
      parameters:
        - in: query
          name: email
          required: true
          schema:
            type: string
          description: User email at blacklist
      responses:
        '200':
          description: Blacklisting success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: boolean
                    example: true
        default:
          description: According to response body error
      tags:
        - user
      summary: Removes certain email from blacklist
  /user/register:
    post:
      requestBody:
        description: User credentials
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/schemas/InputUser'
      tags:
        - user
      responses:
        '200':
          description: Newly created user
          content:
            application/json:
              schema:
                $ref: '#components/schemas/OutputUser'
        default:
          description: According to response body error
      summary: Register user
  /user/authorize:
    post:
      requestBody:
        description: User's email and password
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/schemas/AuthUser'
      responses:
        '201':
          description: Successfully authorized
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Token'
        default:
          description: According to response body error
      tags:
        - user
      summary: Authorize user by credentials

  /user/validate/send:
    post:
      requestBody:
        description: User email to send code to
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: jacksparrow@gmail.com
      responses:
        '201':
          description: Code has been sent
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: boolean
                    example: true
        default:
          description: According to response body error
      tags:
        - user
      summary: Endpoint to send approval code to user email
  /user/validate/approve:
    post:
      requestBody:
        description: User email and input code
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: jacksparrow@gmail.com
                code:
                  type: integer
                  example: 756817
      responses:
        '201':
          description: Code is correct
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Token'
        default:
          description: According to response body error
      tags:
        - user
      summary: Compares input code with the sent one
  /user/take_off:
    get:
      security:
        - ApiKeyAuthUser: []
      responses:
        '200':
          description: All user take-offs
          content:
            application/json:
              schema:
                $ref: '#components/schemas/UserTakeoff'
        default:
          description: According to response body error
      tags:
        - user
        - take off
      summary: Returns all user rubbish take-offs
  /user/take_off/total:
    get:
      security:
        - ApiKeyAuthUser: []
      responses:
        '200':
          description: Total amount in grams of user take-offs
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: double
                    example: 1700.1
        default:
          description: According to response body error
      tags:
        - user
        - take off
      summary: Returns total amount of user rubbish take-offs
  /user/profile/change_password:
    patch:
      tags:
        - user
      summary: Changes user password
      security:
        - ApiKeyAuthUser: []
      requestBody:
        description: Triple of password to change
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/schemas/ChangePassword'
      responses:
        '200':
          description: Updated token
          content:
            application/json:
              schema:
              $ref: '#components/schemas/Token'
        default:
          description: According to response body error

  /recycle_point/photo/{path}:
    get:
      parameters:
        - in: path
          name: path
          required: true
          schema:
            type: string
          description: Recycle point photo name
      security:
        - ApiKeyAuthUser: []
      responses:
        '200':
          description: Recycle point photo
          content:
            img/png:
              schema:
                type: string
                format: binary
        default:
          description: According to response body error
      tags:
        - recycle point
      summary: Returns recycle point photo

  /recycle_point:
    get:
      security:
        - ApiKeyAuthUser: [ ]
      responses:
        '200':
          description: Found recycle points
          content:
            application/json:
              schema:
                $ref: '#components/schemas/OutputRecyclePoint'
        default:
          description: According to response body error
      parameters:
        - in: query
          name: query
          required: false
          schema:
            type: string
          description: Specifies search by address
        - in: query
          name: filter
          required: false
          schema:
            type: string
          description: Specifies search by rubbish type filter
      tags:
        - recycle point
      summary: Search for recycle points

    post:
      requestBody:
        description: Recycle point to offer
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/schemas/InputRecyclePoint'
      security:
        - ApiKeyAuthUser: [ ]
      responses:
        '201':
          description: Newly created recycle point
          content:
            application/json:
              schema:
                $ref: '#components/schemas/OutputRecyclePoint'
        default:
          description: According to response body error
      tags:
        - recycle point
      summary: Offer new recycle point

  /recycle_point/{id}:
    get:
      parameters:
        - in: path
          name: id
          required: false
          schema:
            type: integer
          description: Certain recycle point id
      security:
        - ApiKeyAuthUser: [ ]
      responses:
        '200':
          description: Recycle point with corresponding id
          content:
            application/json:
              schema:
                $ref: '#components/schemas/OutputRecyclePoint'
        default:
          description: According to response body error
      tags:
        - recycle point
      summary: Returns recycle point by id

    delete:
      security:
        - ApiKeyAuthAdmin: [ ]
      responses:
        '200':
          description: Deletion success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: boolean
                    example: true
        default:
          description: According to response body error
      tags:
        - recycle point
      summary: Deletes recycle point by id

  /recycle_point/{id}/photo:
    patch:
      requestBody:
        content:
          image/png:
           schema:
             type: string
             format: binary
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: Certain recycle point id
        - in: query
          name: ext
          required: true
          schema:
            type: string
          description: Extension of photo
      security:
        - ApiKeyAuthUser: [ ]
      responses:
        '200':
          description: Photo supply success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: boolean
                    example: true
        default:
          description: According to response body error
      tags:
        - recycle point
      summary: Adds recycle point photo

  /recycle_point/{id}/approve:
    patch:
      security:
        - ApiKeyAuthAdmin: [ ]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: Certain recycle point id
      responses:
        '200':
          description: Approval success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: boolean
                    example: true
        default:
          description: According to response body error
      tags:
        - recycle point
      summary: Approves offered recycle points

  /recycle_point/{id}/review:
    get:
      tags:
        - review
      summary: Return all review about recycle point
    post:
      tags:
        - review
      summary: Create comment about recycle point

  /review/{id}:
    get:
      tags:
        - review
      summary: Return cartain review by id
    delete:
      tags:
        - review
      summary: Delete certain review by id (only for admins)

  /rubbish_type/total:
    get:
      tags:
        - rubbish type
      summary: Return total amount of rubbish taken off
  /rubbish_type/{id}:
    get:
      tags:
        - rubbish type
      summary: Return certain rubbish type by id
    delete:
      tags:
        - rubbish type
      summary: Delete rubbish type by id
  /rubbish_type:
    post:
      tags:
        - rubbish type
      summary: Add new rubbish type
  /take_off/{id}:
    get:
      tags:
        - take off
      summary: Get info about take off by id
    delete:
      tags:
        - take off
      summary: Delete certain take off by id
  /take_off:
    post:
      tags:
        - take off
      summary: Add new take off
components:
  schemas:
    ChangePassword:
      type: object
      properties:
        previousPassword:
          type: string
          example: 12345
          required: false
        newPassword1:
          type: string
          example: 12222
        newPassword2:
          type: string
          example: 12222
    OutputUser:
      type: object
      properties:
        firstName:
          type: string
          example: Jack
        lastName:
          type: String
          example: Sparrow
        email:
          type: string
          example: jacksparrow@gmail.com
        dateOfBirth:
          type: string
          example: 1999-04-11
        dateOfRegistration:
          type: string
          example: 2001-08-09
        userImage:
          type: string
          example: sparrow
        emailVerified:
          type: boolean
          example: true
        timesChanged:
          type: integer
          example: 0
        role:
          type: integer
          example: 1
    InputUser:
      type: object
      properties:
        firstName:
          type: string
          example: Jack
        lastName:
          type: string
          example: Sparrow
        email:
          type: string
          example: jacksparrow@gmail.com
        password:
          type: string
          example: jacksparrow
        dateOfBirth:
          type: string
          example: 1998-09-11
        userImage:
          type: string
          example: sparrow
    AuthUser:
      type: object
      properties:
        email:
          type: string
          example: jacksparrow@gmail.com
        password:
          type: string
          example: jacksparrow
    UserTakeoff:
      type: object
      properties:
        id:
          type: integer
          example: 1
        idUser:
          type: integer
          example: 15
        idRecyclePoint:
          type: integer
          example: 11
        idRubbishType:
          type: integer
          example: 22
        amountInGrams:
          type: double
          example: 300.0
        datetime:
          type: string
          example: 2023-11-15
        percentRating:
          type: integer
          example: 70

    InputRecyclePoint:
      type: object
      properties:
        latitude:
          type: double
          example: 35.00918
        longitude:
          type: double
          example: 43.1092
        streetName:
          type: string
          example: Blagodatnaya
        streetHouseNum:
          type: string
          example: 145
        weekSchedule:
          type: string
          example: 9:00-18:00;9:00-18:00;9:00-18:00;9:00-18:00;9:00-18:00;-;-
        locationDescription:
          type: string
          example: Locates not far away from metro station Elektrosila

    OutputRecyclePoint:
      type: object
      properties:
        id:
          type: int
          example: 1
        latitude:
          type: double
          example: 35.00918
        longitude:
          type: double
          example: 43.1092
        streetName:
          type: string
          example: Blagodatnaya
        streetHouseNum:
          type: string
          example: 145
        weekSchedule:
          type: string
          example: 9:00-18:00;9:00-18:00;9:00-18:00;9:00-18:00;9:00-18:00;-;-
        locationDescription:
          type: string
          example: Locates not far away from metro station Elektrosila
        photoPath:
          type: string
          example: http://127.0.0.1:8080/recycle_point/photo/blag.png
        totalRating:
          type: double
          example: 81.5
        approved:
          type: boolean
          example: false
        type:
          type: string
          example: Terminal

    Token:
      type: object
      properties:
        token:
          type: string
          example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1aWQiOjE1LCJpc3MiOiJjb20uZXhhbXBsZS5lY28tYXBpIiwidGNoIjowLCJyaWQiOjF9.0vcPyDpvhyy4hWP2-jO8ZmoI1wSK7O34BHhBwn-9FTU
  securitySchemes:
    ApiKeyAuthAdmin:
      type: apiKey
      in: header
      name: Authorization
    ApiKeyAuthUser:
      type: apiKey
      in: header
      name: Authorization